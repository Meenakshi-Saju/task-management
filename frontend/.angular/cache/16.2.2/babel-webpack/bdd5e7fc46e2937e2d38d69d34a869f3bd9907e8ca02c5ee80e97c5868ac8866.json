{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../loginnavbar/loginnavbar.component\";\nfunction UpdatetaskComponent_select_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select\", 9);\n    i0.ɵɵlistener(\"change\", function UpdatetaskComponent_select_17_Template_select_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.getStatus($event));\n    });\n    i0.ɵɵelementStart(1, \"option\", 10);\n    i0.ɵɵtext(2, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"option\", 10);\n    i0.ɵɵtext(4, \"To-Do\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"option\", 11);\n    i0.ɵɵtext(6, \"Done\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 12);\n    i0.ɵɵtext(8, \"Doing\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class UpdatetaskComponent {\n  constructor(router, http, activatedRoute) {\n    this.router = router;\n    this.http = http;\n    this.activatedRoute = activatedRoute;\n    this.url = \"http://localhost:8080/api/v1/task/updatetask\";\n    this.flag = false;\n    this.TaskData = [];\n    this.route = router.url;\n  }\n  ngOnInit() {\n    //Fetching URL Parameter Value Using Activated Route\n    this.activatedRoute.params.subscribe(params => {\n      this.id = params['id'];\n    });\n    this.loadTaskData();\n  }\n  //Fetching Previous Task Details from Database Before Update Operation\n  loadTaskData() {\n    this.http.get(this.url + '/' + this.id).subscribe(resultData => {\n      this.title = resultData.title;\n      this.desc = resultData.description;\n      this.taskStatus = resultData.status;\n      console.log(\"Task ST : \" + this.taskStatus);\n    });\n  }\n  update(taskTitle, taskDesc) {\n    this.taskTitle = taskTitle;\n    this.taskDesc = taskDesc;\n    let bodyData = {\n      \"title\": this.taskTitle,\n      \"description\": this.taskDesc,\n      \"status\": this.taskStatus\n    };\n    //Fetching User Details from UI and Sending to the API using HTTP Post Method for Updating Task\n    this.http.post(this.url + '/' + this.id, bodyData, {\n      responseType: 'text'\n    }).subscribe(resultData => {\n      alert(\"Task Updated Successfully\");\n      this.title = \"\";\n      this.desc = \"\";\n      this.router.navigateByUrl('/gettask');\n    });\n  }\n  //Delete Method\n  delete() {\n    this.http.delete(this.url + '/' + this.id, {\n      responseType: 'text'\n    }).subscribe(result => {\n      alert(\"Task Deleted Successfully\");\n      console.log(result);\n      this.router.navigateByUrl('/gettask');\n    });\n  }\n  //Method to Change Task Status\n  changeStatus() {\n    this.flag = true;\n  }\n  //Method to Get Task Status\n  getStatus(event) {\n    this.taskStatus = event.target.value;\n  }\n}\n_class = UpdatetaskComponent;\n_class.ɵfac = function UpdatetaskComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-updatetask\"]],\n  decls: 19,\n  vars: 3,\n  consts: [[1, \"card-body\", \"p-5\"], [1, \"text-uppercase\", \"text-center\", \"mb-5\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"text\", \"id\", \"exampleInputTaskTitle\", \"name\", \"title\", \"placeholder\", \"Enter Task\", 1, \"form-control\", \"form-control-lg\", 3, \"value\"], [\"taskTitle\", \"\"], [\"type\", \"text\", \"id\", \"exampleInputTaskDescription\", \"name\", \"description\", \"placeholder\", \"Enter Description\", 1, \"form-control\", \"form-control-lg\", 3, \"value\"], [\"taskDesc\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"], [\"class\", \"form-select form-select-sm\", \"aria-label\", \".form-select-sm example\", \"style\", \"margin-top: 26px;\", 3, \"change\", 4, \"ngIf\"], [\"aria-label\", \".form-select-sm example\", 1, \"form-select\", \"form-select-sm\", 2, \"margin-top\", \"26px\", 3, \"change\"], [\"value\", \"todo\"], [\"value\", \"done\"], [\"value\", \"doing\"]],\n  template: function UpdatetaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"app-loginnavbar\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\", 1);\n      i0.ɵɵtext(3, \"UPDATE TASK \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\")(5, \"div\", 2);\n      i0.ɵɵelement(6, \"input\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2);\n      i0.ɵɵelement(9, \"input\", 5, 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function UpdatetaskComponent_Template_button_click_11_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(7);\n        const _r1 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.update(_r0.value, _r1.value));\n      });\n      i0.ɵɵtext(12, \"Update\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function UpdatetaskComponent_Template_button_click_13_listener() {\n        return ctx.delete();\n      });\n      i0.ɵɵtext(14, \"Delete\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function UpdatetaskComponent_Template_button_click_15_listener() {\n        return ctx.changeStatus();\n      });\n      i0.ɵɵtext(16, \"Change Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, UpdatetaskComponent_select_17_Template, 9, 0, \"select\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.desc);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.flag);\n    }\n  },\n  dependencies: [i3.NgIf, i1.RouterOutlet, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.NgControlStatusGroup, i4.NgForm, i5.LoginnavbarComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","UpdatetaskComponent_select_17_Template_select_change_0_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","getStatus","ɵɵtext","ɵɵelementEnd","UpdatetaskComponent","constructor","router","http","activatedRoute","url","flag","TaskData","route","ngOnInit","params","subscribe","id","loadTaskData","get","resultData","title","desc","description","taskStatus","status","console","log","update","taskTitle","taskDesc","bodyData","post","responseType","alert","navigateByUrl","delete","result","changeStatus","event","target","value","ɵɵdirectiveInject","i1","Router","i2","HttpClient","ActivatedRoute","selectors","decls","vars","consts","template","UpdatetaskComponent_Template","rf","ctx","ɵɵelement","UpdatetaskComponent_Template_button_click_11_listener","_r5","_r0","ɵɵreference","_r1","UpdatetaskComponent_Template_button_click_13_listener","UpdatetaskComponent_Template_button_click_15_listener","ɵɵtemplate","UpdatetaskComponent_select_17_Template","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵproperty"],"sources":["C:\\Users\\Sanjana Saju\\Documents\\meen\\S7\\FULL STACK DEV\\final2\\taskmanager\\TaskManagement_Frontend\\src\\app\\updatetask\\updatetask.component.ts","C:\\Users\\Sanjana Saju\\Documents\\meen\\S7\\FULL STACK DEV\\final2\\taskmanager\\TaskManagement_Frontend\\src\\app\\updatetask\\updatetask.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-updatetask',\n  templateUrl: './updatetask.component.html',\n  styleUrls: ['./updatetask.component.css']\n})\nexport class UpdatetaskComponent implements OnInit{\n\n  url = \"http://localhost:8080/api/v1/task/updatetask\";\n\n  title : any ;\n  desc : any ;\n\n  taskTitle : any ;\n  taskDesc :any;\n  taskStatus : any ;\n\n  id:any ;\n\n  route: string | undefined;\n\n  flag : boolean = false ;\n\n  public TaskData:any = [];\n\n  constructor(private router: Router , private http: HttpClient , private activatedRoute: ActivatedRoute ){\n    this.route = router.url;\n  }\n\n  ngOnInit(): void {\n    //Fetching URL Parameter Value Using Activated Route\n    this.activatedRoute.params.subscribe(params => {\n      this.id = params['id'];\n    });\n    this.loadTaskData();\n  }\n\n  //Fetching Previous Task Details from Database Before Update Operation\n  loadTaskData(){\n    this.http.get(this.url+'/'+this.id).subscribe((resultData: any)=>{\n      this.title = resultData.title ;\n      this.desc = resultData.description ;\n      this.taskStatus = resultData.status ;\n\n      console.log(\"Task ST : \"+this.taskStatus);\n    })\n  }\n\n  update(taskTitle: any , taskDesc: any){\n      this.taskTitle = taskTitle ;\n      this.taskDesc = taskDesc ;\n\n      let bodyData = {\n        \"title\" : this.taskTitle,\n        \"description\" : this.taskDesc,\n        \"status\" : this.taskStatus\n      };\n      //Fetching User Details from UI and Sending to the API using HTTP Post Method for Updating Task\n      this.http.post(this.url+'/'+this.id,bodyData,{responseType: 'text'}).subscribe((resultData: any)=>\n      {\n        alert(\"Task Updated Successfully\");\n        this.title = \"\";\n        this.desc = \"\" ;\n        this.router.navigateByUrl('/gettask');\n      });\n  }\n\n  //Delete Method\n  delete(){\n    this.http.delete(this.url+'/'+this.id,{responseType: 'text'}).subscribe((\n      result:any)=>{\n\n        alert(\"Task Deleted Successfully\");\n        console.log(result);\n        this.router.navigateByUrl('/gettask');\n\n      });\n  }\n\n  //Method to Change Task Status\n  changeStatus(){\n    this.flag = true ;\n  }\n\n  //Method to Get Task Status\n  getStatus(event : any){\n    this.taskStatus = event.target.value ;\n  }\n\n}\n","<app-loginnavbar></app-loginnavbar>\n<div class=\"card-body p-5\">\n  <h2 class=\"text-uppercase text-center mb-5\">UPDATE TASK  </h2>\n<form>\n  <div class=\"form-outline mb-4\">\n    <input type=\"text\" class=\"form-control form-control-lg\" id=\"exampleInputTaskTitle\" name=\"title\" placeholder=\"Enter Task\" value={{title}} #taskTitle>\n  </div>\n  <div class=\"form-outline mb-4\">\n    <input type=\"text\" class=\"form-control form-control-lg\" id=\"exampleInputTaskDescription\" name=\"description\" placeholder=\"Enter Description\" value={{desc}} #taskDesc>\n  </div>\n\n  <button type=\"button\" class=\"btn btn-success btn-block\" (click)=\"update(taskTitle.value , taskDesc.value)\">Update</button>\n  <button type=\"button\" class=\"btn btn-success btn-block\" (click)=\"delete()\">Delete</button>\n  <button type=\"button\" class=\"btn btn-success btn-block\" (click)=\"changeStatus()\">Change Status</button>\n\n  <select class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" *ngIf=\"flag\" style=\"margin-top: 26px;\" (change)=\"getStatus($event)\">\n    <option value=\"todo\">Status</option>\n    <option value=\"todo\">To-Do</option>\n    <option value=\"done\">Done</option>\n    <option value=\"doing\">Doing</option>\n  </select>\n</form>\n</div>\n<router-outlet></router-outlet>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}