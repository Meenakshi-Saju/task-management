{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../loginnavbar/loginnavbar.component\";\nexport class AddtaskComponent {\n  constructor(httpClient, route, router) {\n    this.httpClient = httpClient;\n    this.route = route;\n    this.router = router;\n    this.title = \"\";\n    this.desc = \"\";\n    this.status = \"\";\n    this.r1 = \"\";\n    this.r1 = router.url;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.st = params['status'];\n      console.log(\"Status :- \" + this.st);\n    });\n  }\n  // Add Task Method\n  addTask() {\n    if (this.title === \"\" || this.desc === \"\") {\n      alert(\"Please Enter Valid Input\");\n    } else {\n      let bodyData = {\n        \"title\": this.title,\n        \"description\": this.desc,\n        \"status\": this.st\n      };\n      //Fetching User Details from UI and Sending to the API using HTTP Post Method for Adding New Task\n      this.httpClient.post(\"http://localhost:8080/api/v1/task/addtask\", bodyData, {\n        responseType: 'text'\n      }).subscribe(resultData => {\n        console.log(\"Task Title : \" + resultData);\n        alert(\"Task Added Successfully\");\n        this.router.navigateByUrl('/gettask');\n        this.title = \"\";\n        this.desc = \"\";\n        this.status = \"\";\n      });\n    }\n  }\n}\n_class = AddtaskComponent;\n_class.ɵfac = function AddtaskComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-addtask\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"card-body\", \"p-5\"], [1, \"text-uppercase\", \"text-center\", \"mb-5\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"text\", \"id\", \"exampleInputTaskTitle\", \"name\", \"title\", \"placeholder\", \"Enter Task\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"exampleInputTaskDescription\", \"name\", \"description\", \"placeholder\", \"Enter Description\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"]],\n  template: function AddtaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-loginnavbar\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\", 1);\n      i0.ɵɵtext(3, \"ADD TASK \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\")(5, \"div\", 2)(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddtaskComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AddtaskComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.desc = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AddtaskComponent_Template_button_click_9_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵtext(10, \"Add Task\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(11, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.desc);\n    }\n  },\n  dependencies: [i2.RouterOutlet, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.LoginnavbarComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["AddtaskComponent","constructor","httpClient","route","router","title","desc","status","r1","url","ngOnInit","params","subscribe","st","console","log","addTask","alert","bodyData","post","responseType","resultData","navigateByUrl","i0","ɵɵdirectiveInject","i1","HttpClient","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","AddtaskComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddtaskComponent_Template_input_ngModelChange_6_listener","$event","AddtaskComponent_Template_input_ngModelChange_8_listener","AddtaskComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Sanjana Saju\\Documents\\meen\\S7\\FULL STACK DEV\\task-management-project\\taskmanager\\frontend\\src\\app\\addtask\\addtask.component.ts","C:\\Users\\Sanjana Saju\\Documents\\meen\\S7\\FULL STACK DEV\\task-management-project\\taskmanager\\frontend\\src\\app\\addtask\\addtask.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute , Router } from '@angular/router';\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.css']\n})\nexport class AddtaskComponent implements OnInit{\n\n  title : string = \"\";\n  desc : string = \"\";\n  status : string = \"\";\n\n  r1: string =\"\";\n\n  st : any ;\n\n  constructor(private httpClient : HttpClient , private route: ActivatedRoute , private router: Router){\n    this.r1 = router.url;\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.st = params['status'];\n      console.log(\"Status :- \"+this.st);\n    });\n  }\n\n  // Add Task Method\n  addTask()\n  {\n    if(this.title===\"\" || this.desc===\"\")\n    {\n      alert(\"Please Enter Valid Input\");\n    }\n    else\n    {\n      let bodyData = {\n        \"title\" : this.title,\n        \"description\" : this.desc,\n        \"status\" : this.st\n      };\n      //Fetching User Details from UI and Sending to the API using HTTP Post Method for Adding New Task\n      this.httpClient.post(\"http://localhost:8080/api/v1/task/addtask\",bodyData,{responseType: 'text'}).subscribe((resultData: any)=>\n      {\n        console.log(\"Task Title : \"+resultData);\n        alert(\"Task Added Successfully\");\n        this.router.navigateByUrl('/gettask');\n        this.title = \"\";\n        this.desc = \"\" ;\n        this.status = \"\" ;\n      });\n    }\n  }\n}\n","<app-loginnavbar></app-loginnavbar>\n<div class=\"card-body p-5\">\n  <h2 class=\"text-uppercase text-center mb-5\">ADD TASK  </h2>\n<form>\n  <div class=\"form-outline mb-4\">\n    <input type=\"text\" class=\"form-control form-control-lg\" id=\"exampleInputTaskTitle\" name=\"title\" placeholder=\"Enter Task\" [(ngModel)]=\"title\">\n  </div>\n  <div class=\"form-outline mb-4\">\n    <input type=\"text\" class=\"form-control form-control-lg\" id=\"exampleInputTaskDescription\" name=\"description\" placeholder=\"Enter Description\" [(ngModel)]=\"desc\">\n  </div>\n  <button type=\"button\" class=\"btn btn-success btn-block\" (click)=\"addTask()\">Add Task</button>\n</form>\n</div>\n<router-outlet></router-outlet>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}